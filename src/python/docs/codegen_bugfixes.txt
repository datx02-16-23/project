visit_If
	missing a break if there were no else/elif
	else_ = node.orelse
	->
	else_ = node.orelse
    if not else_:
        break

visit_Compare
	
	extra %% (first line in for loop)
	self.write(' %s %%' % CMPOP_SYMBOLS[type(op)])
	->
	self.write(' %s ' % CMPOP_SYMBOLS[type(op)])

	called write instead of visit (second line of function)
	self.write(node.left)
	->
	self.visit(node.left)

visit_ImportFrom
	just wrote the item instead of visiting
    	self.write(item)
	->
	self.visit(item)

visit_Delete
	tried to enumerate node instead of node.targets
	for idx, target in enumerate(node):
	->
	for idx, target in enumerate(node.targets):

visit_Raise
	blankspace missing
    self.write('raise')
    ->
	self.write('raise ')

visit_ExceptHandler
	fixed typo (probably intentional)
	def visit_excepthandler(self, node):
	->
	def visit_ExceptHandler(self, node):

visit_BinOp
	fixed enclosing paranthesis
	... 
		=
		self.visit(node.left)
	    self.write(' %s ' % BINOP_SYMBOLS[type(node.op)])
	    self.visit(node.right)
    ->
	self.write('(')
    ...
    self.write(')')